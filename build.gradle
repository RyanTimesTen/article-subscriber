
buildscript {
    ext.kotlin_version = '1.1.4-2'
    ext.spring_boot_version = '1.4.3.RELEASE'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'kotlin-spring'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'io.github.microutils:kotlin-logging:1.4.6'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.springframework.boot:spring-boot-starter-web:$spring_boot_version"

    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
    compile group: 'com.twilio.sdk', name: 'twilio', version: '7.9.0'
    compile group: 'postgresql', name: 'postgresql', version: '9.4.1208-jdbc42-atlassian-hosted'

    testCompile 'io.kotlintest:kotlintest:2.0.1'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

tasks.build.doLast() {
    copyJar.execute()
}

task copyJar(type: Copy) {
    from 'build/libs/api.jar'
    into 'jar'
}

test {
    testLogging {
        afterSuite { desc, result ->
            if (!desc.parent) {
                println "\nTest results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            }
        }
    }
}